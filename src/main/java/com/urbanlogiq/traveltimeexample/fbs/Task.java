package com.urbanlogiq.traveltimeexample.fbs;// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Task extends Table {
  public static Task getRootAsTask(ByteBuffer _bb) { return getRootAsTask(_bb, new Task()); }
  public static Task getRootAsTask(ByteBuffer _bb, Task obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Task __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ObjectId Id() { return Id(new ObjectId()); }
  public ObjectId Id(ObjectId obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ObjectId userId() { return userId(new ObjectId()); }
  public ObjectId userId(ObjectId obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ObjectId task() { return task(new ObjectId()); }
  public ObjectId task(ObjectId obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public String name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public ObjectId jobId() { return jobId(new ObjectId()); }
  public ObjectId jobId(ObjectId obj) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte status() { int o = __offset(14); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public String message() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer messageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public ParamIndices params() { return params(new ParamIndices()); }
  public ParamIndices params(ParamIndices obj) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ObjectId output() { return output(new ObjectId()); }
  public ObjectId output(ObjectId obj) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public boolean discard() { int o = __offset(22); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public ObjectId upstream(int j) { return upstream(new ObjectId(), j); }
  public ObjectId upstream(ObjectId obj, int j) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int upstreamLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public ObjectId downstream(int j) { return downstream(new ObjectId(), j); }
  public ObjectId downstream(ObjectId obj, int j) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int downstreamLength() { int o = __offset(26); return o != 0 ? __vector_len(o) : 0; }
  public long created() { int o = __offset(28); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long start() { int o = __offset(30); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long lastUpdated() { int o = __offset(32); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long end() { int o = __offset(34); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public int retries() { int o = __offset(36); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int barrierCount() { int o = __offset(38); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String lastUpdatedByPod() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lastUpdatedByPodAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer lastUpdatedByPodInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  public int flags() { int o = __offset(42); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createTask(FlatBufferBuilder builder,
      int _idOffset,
      int user_idOffset,
      int taskOffset,
      int nameOffset,
      int job_idOffset,
      byte status,
      int messageOffset,
      int paramsOffset,
      int outputOffset,
      boolean discard,
      int upstreamOffset,
      int downstreamOffset,
      long created,
      long start,
      long last_updated,
      long end,
      int retries,
      int barrier_count,
      int last_updated_by_podOffset,
      int flags) {
    builder.startObject(20);
    Task.addEnd(builder, end);
    Task.addLastUpdated(builder, last_updated);
    Task.addStart(builder, start);
    Task.addCreated(builder, created);
    Task.addFlags(builder, flags);
    Task.addLastUpdatedByPod(builder, last_updated_by_podOffset);
    Task.addBarrierCount(builder, barrier_count);
    Task.addRetries(builder, retries);
    Task.addDownstream(builder, downstreamOffset);
    Task.addUpstream(builder, upstreamOffset);
    Task.addOutput(builder, outputOffset);
    Task.addParams(builder, paramsOffset);
    Task.addMessage(builder, messageOffset);
    Task.addJobId(builder, job_idOffset);
    Task.addName(builder, nameOffset);
    Task.addTask(builder, taskOffset);
    Task.addUserId(builder, user_idOffset);
    Task.add_id(builder, _idOffset);
    Task.addDiscard(builder, discard);
    Task.addStatus(builder, status);
    return Task.endTask(builder);
  }

  public static void startTask(FlatBufferBuilder builder) { builder.startObject(20); }
  public static void add_id(FlatBufferBuilder builder, int IdOffset) { builder.addOffset(0, IdOffset, 0); }
  public static void addUserId(FlatBufferBuilder builder, int userIdOffset) { builder.addOffset(1, userIdOffset, 0); }
  public static void addTask(FlatBufferBuilder builder, int taskOffset) { builder.addOffset(2, taskOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(3, nameOffset, 0); }
  public static void addJobId(FlatBufferBuilder builder, int jobIdOffset) { builder.addOffset(4, jobIdOffset, 0); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(5, status, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(6, messageOffset, 0); }
  public static void addParams(FlatBufferBuilder builder, int paramsOffset) { builder.addOffset(7, paramsOffset, 0); }
  public static void addOutput(FlatBufferBuilder builder, int outputOffset) { builder.addOffset(8, outputOffset, 0); }
  public static void addDiscard(FlatBufferBuilder builder, boolean discard) { builder.addBoolean(9, discard, false); }
  public static void addUpstream(FlatBufferBuilder builder, int upstreamOffset) { builder.addOffset(10, upstreamOffset, 0); }
  public static int createUpstreamVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startUpstreamVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDownstream(FlatBufferBuilder builder, int downstreamOffset) { builder.addOffset(11, downstreamOffset, 0); }
  public static int createDownstreamVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDownstreamVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCreated(FlatBufferBuilder builder, long created) { builder.addLong(12, created, 0L); }
  public static void addStart(FlatBufferBuilder builder, long start) { builder.addLong(13, start, 0L); }
  public static void addLastUpdated(FlatBufferBuilder builder, long lastUpdated) { builder.addLong(14, lastUpdated, 0L); }
  public static void addEnd(FlatBufferBuilder builder, long end) { builder.addLong(15, end, 0L); }
  public static void addRetries(FlatBufferBuilder builder, int retries) { builder.addInt(16, retries, 0); }
  public static void addBarrierCount(FlatBufferBuilder builder, int barrierCount) { builder.addInt(17, barrierCount, 0); }
  public static void addLastUpdatedByPod(FlatBufferBuilder builder, int lastUpdatedByPodOffset) { builder.addOffset(18, lastUpdatedByPodOffset, 0); }
  public static void addFlags(FlatBufferBuilder builder, int flags) { builder.addInt(19, flags, 0); }
  public static int endTask(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // _id
    builder.required(o, 6);  // user_id
    builder.required(o, 8);  // task
    builder.required(o, 10);  // name
    builder.required(o, 12);  // job_id
    builder.required(o, 18);  // params
    builder.required(o, 20);  // output
    builder.required(o, 24);  // upstream
    builder.required(o, 26);  // downstream
    return o;
  }
}

