package com.urbanlogiq.traveltimeexample.fbs;// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ObjectId extends Table {
  public static ObjectId getRootAsObjectId(ByteBuffer _bb) { return getRootAsObjectId(_bb, new ObjectId()); }
  public static ObjectId getRootAsObjectId(ByteBuffer _bb, ObjectId obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ObjectId __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int b(int j) { int o = __offset(4); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int bLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer bAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer bInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createObjectId(FlatBufferBuilder builder,
      int bOffset) {
    builder.startObject(1);
    ObjectId.addB(builder, bOffset);
    return ObjectId.endObjectId(builder);
  }

  public static void startObjectId(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addB(FlatBufferBuilder builder, int bOffset) { builder.addOffset(0, bOffset, 0); }
  public static int createBVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startBVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endObjectId(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // b
    return o;
  }
}

