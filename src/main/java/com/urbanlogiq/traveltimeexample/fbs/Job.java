package com.urbanlogiq.traveltimeexample.fbs;// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Job extends Table {
  public static Job getRootAsJob(ByteBuffer _bb) { return getRootAsJob(_bb, new Job()); }
  public static Job getRootAsJob(ByteBuffer _bb, Job obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Job __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte status() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public ObjectId userId() { return userId(new ObjectId()); }
  public ObjectId userId(ObjectId obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public Task tasks(int j) { return tasks(new Task(), j); }
  public Task tasks(Task obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int tasksLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public TaskParameter params(int j) { return params(new TaskParameter(), j); }
  public TaskParameter params(TaskParameter obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int paramsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }

  public static int createJob(FlatBufferBuilder builder,
      byte status,
      int user_idOffset,
      int tasksOffset,
      int paramsOffset) {
    builder.startObject(4);
    Job.addParams(builder, paramsOffset);
    Job.addTasks(builder, tasksOffset);
    Job.addUserId(builder, user_idOffset);
    Job.addStatus(builder, status);
    return Job.endJob(builder);
  }

  public static void startJob(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addStatus(FlatBufferBuilder builder, byte status) { builder.addByte(0, status, 0); }
  public static void addUserId(FlatBufferBuilder builder, int userIdOffset) { builder.addOffset(1, userIdOffset, 0); }
  public static void addTasks(FlatBufferBuilder builder, int tasksOffset) { builder.addOffset(2, tasksOffset, 0); }
  public static int createTasksVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTasksVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addParams(FlatBufferBuilder builder, int paramsOffset) { builder.addOffset(3, paramsOffset, 0); }
  public static int createParamsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startParamsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endJob(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 6);  // user_id
    builder.required(o, 8);  // tasks
    builder.required(o, 10);  // params
    return o;
  }
  public static void finishJobBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedJobBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }
}

